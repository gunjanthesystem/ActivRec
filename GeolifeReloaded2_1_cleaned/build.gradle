/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'gunjanthesystem' at '10/29/16 10:26 PM' with Gradle 3.0
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.0/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
//apply plugin: 'fatJar'


///////////////////////////////////////////////////
sourceCompatibility = 1.8
version = '1.0'
//def geoToolsVersion = "18.2"    
///////////////////////////////////////////////////


// In this section you declare where to find the dependencies of your project
repositories {
    
    maven { url "http://maven.geotoolkit.org/" }
    maven { url "http://download.osgeo.org/webdav/geotools/" }
    maven { url "https://repo.boundlessgeo.com/release" }
    maven { url "https://jitpack.io" }
	//maven { url "https://raw.github.com/amidst/toolbox/mvn-repo/"}
    maven { url "https://plugins.gradle.org/m2/"}
    maven { url "https://oss.sonatype.org/content/repositories/snapshots"}
    maven { url "https://nexus.bedatadriven.com/content/groups/public"} //for renjin}
        jcenter()
    mavenCentral()

	// Use 'jcenter' for resolving your dependencies.
	// You can declare any Maven/Ivy/file repository here.
	
   
   //	 flatDir {
  //     dirs '/home/gunjan/Immovables/amidsttoolbox/'
       //'/home/gunjan/git/GeolifeReloaded2_1_cleaned/resources/'
  // }
}



// In this section you declare the dependencies for your production and test code
dependencies 
{
	// The production code uses the SLF4J logging API at compile time
	//group:name:version   https://docs.gradle.org/current/userguide/artifact_dependencies_tutorial.html
	compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'org.slf4j:slf4j-api:1.7.21'
	compile 'org.apache.commons:commons-csv:1.4'
	compile 'org.apache.commons:commons-exec:1.3'
	compile 'org.apache.commons:commons-lang3:3.5'
	compile 'org.apache.commons:commons-math3:3.6.1'
	compile 'de.ruedigermoeller:fst:2.48'
	compile 'com.esotericsoftware:kryo:4.0.0'
	//compile 'org.mapdb:mapdb:3.0.2'
	compile 'nz.ac.waikato.cms.weka:weka-stable:3.8.0'
	
	//compile '::  iqm'
	compile 'org.jgrapht:jgrapht-core:1.2.0'
	compile 'org.json:json:20160810'
	compile 'org.mariadb.jdbc:mariadb-java-client:1.5.4'
	compile 'com.mchange:c3p0:0.9.5.2'
	compile 'com.zaxxer:HikariCP:2.5.1'
	//compile 'org.tinyjee.jgraphx:jgraphx:3.4.1.3'
	compile group: 'com.github.jgraph', name: 'jgraphx', version: 'v3.9.3'
    //$compile 'org.n52.matlab:matlab-control:5.0.0'
	compile 'net.seninp:jmotif-sax:1.1.1'
	compile 'com.google.uzaygezen:uzaygezen-core:0.2'
	compile group: 'com.github.mgunlogson', name: 'cuckoofilter4j', version: '1.0.1'
	compile group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
	
	//executing processes in java
	compile group:'com.zaxxer',name:'nuprocess',version:'1.1.0'
	compile group:'org.zeroturnaround',name:'zt-exec',version:'1.9'

	//JavaFX UI controls
   	compile 'org.controlsfx:controlsfx:8.40.13'
	// compile 'org.controlsfx:controlsfx-samples:8.40.13'

	// material design for javafx
    compile 'com.jfoenix:jfoenix:8.0.7'//1'
	
	//Icon packs for Java applications
	compile 'org.kordamp.ikonli:ikonli-javafx:2.1.1'
	//for amidst toolkit
	//compile 'eu.amidst:module-all:0.6.1'
    //compile 'com.hugin:hugin:1.0.0'
	//compile name: 'hgapi83_amidst-64'
	
	
	//for shadow jar- http://imperceptiblethoughts.com/shadow/#running_the_shadow_jar
    //compile 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
	//compile 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
	
	//compile name: 'spmf'
	
    
    //compile "org.deeplearning4j:deeplearning4j-core:0.9.1"//0.8.0
    compile 'org.deeplearning4j:deeplearning4j-core:1.0.0-beta'   
    //1.0.0-alpha'
    //compile 'org.nd4j:nd4j-native-platform:1.0.0-beta'//0.9.1"
    compile group: 'org.nd4j', name: 'nd4j-cuda-9.0-platform', version: '1.0.0-beta'
    //compile 'org.nd4j:nd4j-native-platform:1.0.0-alpha'
    //compile 'org.nd4j:nd4j:1.0.0-beta'//1.0.0-alpha'
    compile 'org.deeplearning4j:deeplearning4j-ui_2.11:1.0.0-beta'
    //compile "org.deeplearning4j:deeplearning4j-ui-components:0.9.1"
    //compile 'org.deeplearning4j:deeplearning4j-ui-parent:1.0.0-alpha'
    // https://mvnrepository.com/artifact/org.deeplearning4j/arbiter-core
    compile group: 'org.deeplearning4j', name: 'arbiter-core', version: '1.0.0-beta'
    // https://mvnrepository.com/artifact/org.deeplearning4j/arbiter-deeplearning4j
    compile group: 'org.deeplearning4j', name: 'arbiter-deeplearning4j', version: '1.0.0-beta'
    // https://mvnrepository.com/artifact/org.deeplearning4j/arbiter-server
    compile group: 'org.deeplearning4j', name: 'arbiter-server', version: '1.0.0-beta'
    // https://mvnrepository.com/artifact/org.deeplearning4j/arbiter-ui
    compile group: 'org.deeplearning4j', name: 'arbiter-ui_2.11', version: '1.0.0-beta'

    
    // https://mvnrepository.com/artifact/com.vividsolutions/jts-core
    //required by geo-grid, though to self: can i replace it with more updated:  https://mvnrepository.com/artifact/org.locationtech.jts/jts-core/1.15.1
    compile group: 'com.vividsolutions', name: 'jts-core', version: '1.14.0'

    

    compile "org.renjin:renjin-script-engine:0.8.2527"
    compile "org.moeaframework:moeaframework:2.12"
    compile "com.jcraft:jsch:0.1.54"
    compile "tech.tablesaw:tablesaw-parent:0.11.4"
    compile group: 'xerces', name: 'xercesImpl', version: '2.11.0'

    //compile group: 'com.lynden', name: 'GMapsFX', version: '2.12.0'
    //compile 'com.github.Username:Reponame:Tag
    compile 'com.github.rterp:GMapsFX:d4f4765'
    compile 'com.github.gluonhq:maps:21f09e8'
    // compile "org.geotools:gt-shapefile:${geoToolsVersion}"
    // compile "org.geotools:gt-swing:${geoToolsVersion}"
    compile group: 'org.geotools', name: 'gt-brewer', version: '19.0'
    //For geotoolss
    //compile group: 'javax.media', name: 'jai_core', version: '1.1.3'

 
    compile 'com.google.maps:google-maps-services:0.2.6'
    compile 'com.squareup.okhttp3:okhttp:3.9.1'
    compile 'it.unimi.dsi:fastutil:8.1.1'
      
    //compile fileTree(dir: 'libs', include: ['*.jar','*.zip'])
	// Declare the dependency for your favourite test framework you want to use in your tests.
	// TestNG is also supported by the Gradle Test task. Just change the
	// testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
	// 'test.useTestNG()' to your build script.
	testCompile 'junit:junit:4.12'
   	//compile project('../:SPMFExperiments')
	//compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.1'
}


// buildscript {
//     repositories {
//         jcenter()
//     }
//     dependencies {
//         classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
//     }
// }

// apply plugin: 'com.github.johnrengelman.shadow'





/////////////////////////////////////////////////////////////////////////////
//ref: https://github.com/danthegoodman/gradle-capsule-plugin
//ref:https://plugins.gradle.org/plugin/us.kirchmeier.capsule
buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "us.kirchmeier:gradle-capsule-plugin:1.0.2"
  }
}

apply plugin: "us.kirchmeier.capsule"



/////////////////////////////////////////////////////////////////////////////

//  to run 
mainClassName = 'org.activity.controller.SuperController'
//'org.activity.generator.DatabaseCreatorGowallaQuicker1'
//'org.activity.controller.SuperController'
//'org.activity.generator.GowallaPreProcessorUtils'

// task fatCapsule(type: FatCapsule) {
//   applicationClass 'org.activity.controller.SuperController'
// }

//////////////
/*jar { //shadowJar
	 manifest {
        attributes	 'Implementation-Title': 'SuperController',
					     'Main-Class': mainClassName,
					     'Implementation-Version': version
    }
}*/
/////////////

/// Disabled as not needed at the moment
// task fatJar(type: Jar) {
// 	manifest {
//         attributes 'Implementation-Title': 'SuperController',
//         	'Implementation-Version': version,
//         	'Main-Class': mainClassName
//     }
//     baseName = project.name + '-all'
//     from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//     with jar
// }
///

//org.activity.generator.DatabaseCreatorGowallaQuicker0
task runApp(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  main = mainClassName
  jvmArgs = ['-Xmx9g']
  //
  //,'-javaagent:libs/plumbr/plumbr.jar']
  //, '-XX:-UseGCOverheadLimit
  // arguments to pass to the application
}
