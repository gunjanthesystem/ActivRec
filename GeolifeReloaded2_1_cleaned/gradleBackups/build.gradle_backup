/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'gunjanthesystem' at '10/29/16 10:26 PM' with Gradle 3.0
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.0/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
//apply plugin: 'fatJar'




///////////////////////////////////////////////////
sourceCompatibility = 1.8
version = '1.0'
///////////////////////////////////////////////////


// In this section you declare where to find the dependencies of your project
repositories 
{
	mavenCentral()
	// Use 'jcenter' for resolving your dependencies.
	// You can declare any Maven/Ivy/file repository here.
	jcenter()
	
	maven{
                url "https://raw.github.com/amidst/toolbox/mvn-repo/"
    }
    maven{
                url "https://plugins.gradle.org/m2/"
	}
    
//	 flatDir {
  //     dirs '/home/gunjan/Immovables/amidsttoolbox/'
       //'/home/gunjan/git/GeolifeReloaded2_1_cleaned/resources/'
  // }
}


// In this section you declare the dependencies for your production and test code
dependencies 
{
	// The production code uses the SLF4J logging API at compile time
	//group:name:version   https://docs.gradle.org/current/userguide/artifact_dependencies_tutorial.html
	compile 'org.slf4j:slf4j-api:1.7.21'
	compile 'org.apache.commons:commons-csv:1.4'
	compile 'org.apache.commons:commons-exec:1.3'
	compile 'org.apache.commons:commons-lang3:3.5'
	compile 'org.apache.commons:commons-math3:3.6.1'
	compile 'de.ruedigermoeller:fst:2.48'
	compile 'com.esotericsoftware:kryo:4.0.0'
	compile 'org.mapdb:mapdb:3.0.2'
	compile 'nz.ac.waikato.cms.weka:weka-stable:3.8.0'
	
	//compile '::  iqm'
	compile 'org.jgrapht:jgrapht-core:1.0.0'
	compile 'org.json:json:20160810'
	compile 'org.mariadb.jdbc:mariadb-java-client:1.5.4'
	compile 'com.mchange:c3p0:0.9.5.2'
	compile 'com.zaxxer:HikariCP:2.5.1'
	compile 'org.tinyjee.jgraphx:jgraphx:3.4.1.3'
	compile 'org.n52.matlab:matlab-control:5.0.0'
	compile 'net.seninp:jmotif-sax:1.1.1'
	compile 'com.google.uzaygezen:uzaygezen-core:0.2'
	compile group: 'com.github.mgunlogson', name: 'cuckoofilter4j', version: '1.0.1'
	compile group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
	
	//for amidst toolkit
	//compile 'eu.amidst:module-all:0.6.1'
    //compile 'com.hugin:hugin:1.0.0'
	//compile name: 'hgapi83_amidst-64'
	
	
	//for shadow jar- http://imperceptiblethoughts.com/shadow/#running_the_shadow_jar
    classpath "com.github.jengelman.gradle.plugins:shadow:1.2.4"
	//compile 'com.github.jengelman.gradle.plugins:shadow:1.2.4'
	
	//compile name: 'spmf'
	
	compile fileTree(dir: 'libs', include: ['*.jar','*.zip'])
	    
	// Declare the dependency for your favourite test framework you want to use in your tests.
	// TestNG is also supported by the Gradle Test task. Just change the
	// testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
	// 'test.useTestNG()' to your build script.
	testCompile 'junit:junit:4.12'
}


apply plugin: 'com.github.johnrengelman.shadow'


//////////////
shadowJar {
	 manifest {
        attributes	 'Implementation-Title': 'SuperController',
					     'Main-Class': 'org.activity.controller.SuperController',
					     'Implementation-Version': version
    }
}
/////////////
//  to run 
mainClassName = 'org.activity.controller.SuperController'

task runApp(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath

  main = 'org.activity.controller.SuperController'

  // arguments to pass to the application
}
